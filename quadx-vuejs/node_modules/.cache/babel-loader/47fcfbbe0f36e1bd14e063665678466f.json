{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'EditCustomer',\n\n  data() {\n    return {\n      customer: {},\n      firstName: '',\n      lastName: '',\n      photoURL: '',\n      address: '',\n      mobile: '',\n      email: '',\n      dateOfBirth: '',\n      errors: []\n    };\n  },\n\n  created() {\n    this.getCustomerById();\n  },\n\n  methods: {\n    //alert when view customer data is clicked\n    async alertClick() {\n      alert('Update customer cancelled.');\n    },\n\n    //populate the fields\n    async getCustomerById() {\n      let url = `http://127.0.0.1:8000/api/get_customer/${this.$route.params.id}`; //define axios\n\n      await axios.get(url).then(response => {\n        console.log(response);\n        this.customer = response.data;\n      });\n    },\n\n    async updateCustomer() {\n      this.errors = [];\n\n      if (!this.customer.firstName) {\n        //display error message when returned as empty field\n        this.errors.push('First name is required');\n      }\n\n      if (!this.customer.lastName) {\n        this.errors.push('Last name is required');\n      }\n\n      if (!this.customer.photoURL) {\n        this.errors.push('Photo URL is required');\n      }\n\n      if (!this.customer.address) {\n        this.errors.push('Address is required');\n      }\n\n      if (!this.customer.mobile) {\n        this.errors.push('Mobile number is required');\n      }\n\n      if (!this.customer.email) {\n        this.errors.push('Email Address is required');\n      }\n\n      if (!this.customer.dateOfBirth) {\n        this.errors.push('Date of birth is required');\n      } //no errors\n\n\n      if (!this.errors.length) {\n        let formData = new FormData();\n        formData.append('firstName', this.customer.firstName);\n        formData.append('lastName', this.customer.lastName);\n        formData.append('photoURL', this.customer.photoURL);\n        formData.append('address', this.customer.address);\n        formData.append('mobile', this.customer.mobile);\n        formData.append('email', this.customer.email);\n        formData.append('dateOfBirth', this.customer.dateOfBirth);\n        let url = `http://127.0.0.1:8000/api/update_customer/${this.$route.params.id}`; //access url via axios\n\n        await axios.post(url, formData).then(response => {\n          console.log(response);\n\n          if (response.status == 200) {\n            alert(response.data.message); //refresh the values\n\n            this.customer.firstName = '';\n            this.customer.lastName = '';\n            this.customer.photoURL = '';\n            this.customer.address = '';\n            this.customer.mobile = '';\n            this.customer.email = '';\n            this.customer.dateOfBirth = '';\n          } else {\n            //display errors\n            console.log('error');\n          }\n        }).catch(error => {\n          this.errors.push(error.response);\n        });\n      }\n    },\n\n    async deleteCustomer(id) {\n      let url = `http://127.0.0.1:8000/api/delete_customer/${id}`;\n      await axios.delete(url).then(response => {\n        if (response.data.code == 200) {\n          alert(response.data.message);\n          this.getCustomers();\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n\n  },\n  mounted: function () {\n    console.log('Edit component loaded successfully');\n  }\n};","map":{"version":3,"mappings":"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","names":["axios","name","data","customer","firstName","lastName","photoURL","address","mobile","email","dateOfBirth","errors","created","getCustomerById","methods","alertClick","alert","url","$route","params","id","get","then","response","console","log","updateCustomer","push","length","formData","FormData","append","post","status","message","catch","error","deleteCustomer","delete","code","getCustomers","mounted"],"sourceRoot":"","sources":["C:\\laragon\\www\\quadx\\quadx-vuejs\\src\\views\\EditCustomer.vue"],"sourcesContent":["<template>\r\n    <!--header-->\r\n    <div class=\"container text-center mt-3\">\r\n        <div class=\"row\">\r\n            <div class=\"col\">\r\n                <h2>Edit Customer</h2>\r\n            </div>\r\n            <div class=\"col\">\r\n                <router-link :to=\"{ name: 'ViewCustomer', params: { id: customer.id } }\" class=\"btn btn-primary btn-sm fw-bold\" @click=\"alertClick\">\r\n                    <i class=\"bi bi-pencil\"></i> View Customer Data\r\n                </router-link>\r\n            </div>\r\n            <div class=\"col\">\r\n                <button class=\"btn btn-danger btn-sm\" @click.prevent=\"deleteCustomer(customer.id)\">\r\n                    <i class=\"bi bi-trash\"></i> Delete\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <!--body-->\r\n    <div class=\"container mt-3\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n                <!--error messages-->\r\n                <div class=\"alert alert-danger mt-4\" v-if=\"errors.length\">\r\n                    <!-- v-if: display the errors when true-->\r\n                    <ul class=\"mb-0\">\r\n                        <li v-for=\"(error, index) in errors\" :key=\"index\">\r\n                            <!-- v-for directive is similar to for loop-->\r\n                            {{ error }}\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <!--form-->\r\n                <form @submit.prevent=\"updateCustomer\" novalidate>\r\n                    <fieldset>\r\n                        <div class=\"form-group\">\r\n                            <label class=\"form-label mt-4\">\r\n                                First Name:\r\n                            </label>\r\n                            <input type=\"text\" class=\"form-control\" placeholder=\"First Name\" v-model=\"customer.firstName\" />\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <label class=\"form-label mt-4\">\r\n                                Last Name:\r\n                            </label>\r\n                            <input type=\"text\" class=\"form-control\" placeholder=\"Last Name\" v-model=\"customer.lastName\" />\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <label class=\"form-label mt-4\">\r\n                                Photo URL:\r\n                            </label>\r\n                            <input type=\"text\" class=\"form-control\" placeholder=\"Photo URL\" v-model=\"customer.photoURL\" />\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <label class=\"form-label mt-4\">\r\n                                Address:\r\n                            </label>\r\n                            <input type=\"text\" class=\"form-control\" placeholder=\"Address\" v-model=\"customer.address\" />\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <label class=\"form-label mt-4\">\r\n                                Mobile Number:\r\n                            </label>\r\n                            <input type=\"text\" class=\"form-control\" placeholder=\"Mobile Number\" v-model=\"customer.mobile\" />\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <label class=\"form-label mt-4\">\r\n                                Email Address:\r\n                            </label>\r\n                            <input type=\"email\" class=\"form-control\" placeholder=\"Email Address\" v-model=\"customer.email\" />\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <label class=\"form-label mt-4\">\r\n                                Date of Birth:\r\n                            </label>\r\n                            <input type=\"date\" class=\"form-control\" v-model=\"customer.dateOfBirth\" />\r\n                        </div>\r\n                        <button class=\"btn btn-success btn-sm mt-4\"><i class=\"bi bi-check-circle\"></i> Submit</button>\r\n                    </fieldset>\r\n                </form>\r\n            </div>\r\n            <!--image-->\r\n            <div class=\"col-md-4\">\r\n                <img :src=\"customer.photoURL\" alt=\"\" class=\"customer-img\" />\r\n                <!--dymamic display of photo-->\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n    export default {\r\n        name: 'EditCustomer',\r\n        data() {\r\n            return {\r\n                customer: {},\r\n                firstName: '',\r\n                lastName: '',\r\n                photoURL: '',\r\n                address: '',\r\n                mobile: '',\r\n                email: '',\r\n                dateOfBirth: '',\r\n                errors: []\r\n            }\r\n        },\r\n        created() {\r\n            this.getCustomerById();\r\n        },\r\n        methods: {\r\n            //alert when view customer data is clicked\r\n            async alertClick() {\r\n                alert('Update customer cancelled.');\r\n            },\r\n            //populate the fields\r\n            async getCustomerById() {\r\n                let url = `http://127.0.0.1:8000/api/get_customer/${this.$route.params.id}`;\r\n                //define axios\r\n                await axios.get(url).then(response => {\r\n                    console.log(response);\r\n                    this.customer = response.data;\r\n                });\r\n            },\r\n            async updateCustomer() {\r\n                this.errors = [];\r\n                if (!this.customer.firstName) {\r\n                    //display error message when returned as empty field\r\n                    this.errors.push('First name is required')\r\n                }\r\n                if (!this.customer.lastName) {\r\n                    this.errors.push('Last name is required')\r\n                }\r\n                if (!this.customer.photoURL) {\r\n                    this.errors.push('Photo URL is required')\r\n                }if (!this.customer.address) {\r\n                    this.errors.push('Address is required')\r\n                }\r\n                if (!this.customer.mobile) {\r\n                    this.errors.push('Mobile number is required')\r\n                }\r\n                if (!this.customer.email) {\r\n                    this.errors.push('Email Address is required')\r\n                }\r\n                if (!this.customer.dateOfBirth) {\r\n                    this.errors.push('Date of birth is required')\r\n                }\r\n                //no errors\r\n                if (!this.errors.length) {\r\n                    let formData = new FormData();\r\n                    formData.append('firstName', this.customer.firstName);\r\n                    formData.append('lastName', this.customer.lastName);\r\n                    formData.append('photoURL', this.customer.photoURL);\r\n                    formData.append('address', this.customer.address);\r\n                    formData.append('mobile', this.customer.mobile);\r\n                    formData.append('email', this.customer.email);\r\n                    formData.append('dateOfBirth', this.customer.dateOfBirth);\r\n                    let url = `http://127.0.0.1:8000/api/update_customer/${this.$route.params.id}`;\r\n                    //access url via axios\r\n                    await axios.post(url,formData).then((response) => {\r\n                        console.log(response);\r\n                        if (response.status == 200) {\r\n                            alert(response.data.message);\r\n                            //refresh the values\r\n                            this.customer.firstName = '';\r\n                            this.customer.lastName = '';\r\n                            this.customer.photoURL = '';\r\n                            this.customer.address = '';\r\n                            this.customer.mobile = '';\r\n                            this.customer.email = '';\r\n                            this.customer.dateOfBirth = '';\r\n                        } else {\r\n                            //display errors\r\n                            console.log('error');\r\n                        }\r\n                    }).catch(error => {\r\n                        this.errors.push(error.response);\r\n                    });\r\n                }\r\n            },\r\n            async deleteCustomer(id) {\r\n                let url = `http://127.0.0.1:8000/api/delete_customer/${id}`;\r\n                await axios.delete(url).then(response => {\r\n                    if (response.data.code == 200) {\r\n                        alert(response.data.message);\r\n                        this.getCustomers();\r\n\r\n                    }\r\n                }).catch(error => {\r\n                    console.log(error);\r\n                });\r\n            }\r\n        },\r\n        mounted: function() {\r\n            console.log('Edit component loaded successfully');\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}