{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'AddCustomer',\n\n  data() {\n    return {\n      customer: {},\n      firstName: '',\n      lastName: '',\n      photoURL: '',\n      address: '',\n      mobile: '',\n      email: '',\n      dateOfBirth: '',\n      errors: []\n    };\n  },\n\n  methods: {\n    async cancellAddCustomer() {\n      alert('Add customer cancelled');\n    },\n\n    async saveCustomer() {\n      this.errors = [];\n\n      if (!this.customer.firstName) {\n        //display error message when returned as empty field\n        this.errors.push('First name is required');\n      }\n\n      if (!this.customer.lastName) {\n        this.errors.push('Last name is required');\n      }\n\n      if (!this.customer.photoURL) {\n        this.errors.push('Photo URL is required');\n      }\n\n      if (!this.customer.address) {\n        this.errors.push('Address is required');\n      }\n\n      if (!this.customer.mobile) {\n        this.errors.push('Mobile number is required');\n      }\n\n      if (!this.customer.email) {\n        this.errors.push('Email Address is required');\n      }\n\n      if (!this.customer.dateOfBirth) {\n        this.errors.push('Date of birth is required');\n      } //no errors\n\n\n      if (!this.errors.length) {\n        let formData = new FormData();\n        formData.append('firstName', this.customer.firstName);\n        formData.append('lastName', this.customer.lastName);\n        formData.append('photoURL', this.customer.photoURL);\n        formData.append('address', this.customer.address);\n        formData.append('mobile', this.customer.mobile);\n        formData.append('email', this.customer.email);\n        formData.append('dateOfBirth', this.customer.dateOfBirth);\n        let url = 'http://127.0.0.1:8000/api/save_customer'; //access url via axios\n\n        await axios.post(url, formData).then(response => {\n          console.log(response);\n\n          if (response.status == 200) {\n            alert(response.data.message); //refresh the values\n\n            this.customer.firstName = '';\n            this.customer.lastName = '';\n            this.customer.photoURL = '';\n            this.customer.address = '';\n            this.customer.mobile = '';\n            this.customer.email = '';\n            this.customer.dateOfBirth = '';\n          } else {\n            //display errors\n            console.log('error');\n          }\n        }).catch(error => {\n          this.errors.push(error.response);\n        });\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":"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","names":["axios","name","data","customer","firstName","lastName","photoURL","address","mobile","email","dateOfBirth","errors","methods","cancellAddCustomer","alert","saveCustomer","push","length","formData","FormData","append","url","post","then","response","console","log","status","message","catch","error"],"sourceRoot":"","sources":["C:\\laragon\\www\\quadx\\quadx-vuejs\\src\\views\\AddCustomer.vue"],"sourcesContent":["<template>\r\n    <!--header-->\r\n    <div class=\"container text-center mt-3\">\r\n        <div class=\"row\">\r\n            <div class=\"col\">\r\n                <router-link to=\"/\" class=\"btn btn-primary btn-sm\" @click=\"cancellAddCustomer\"><i class=\"bi bi-arrow-left-circle\"></i> Customer List</router-link>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <!--body-->\r\n    <div class=\"container mt-3\">\r\n        <div class=\"row d-flex justify-content-center\">\r\n            <div class=\"col\">\r\n                <h2>Add Customer</h2>\r\n            </div>\r\n        </div>\r\n        <div class=\"row d-flex justify-content-center\">\r\n            <div class=\"col-md-6\">\r\n                <!--error messages-->\r\n                <div class=\"alert alert-danger mt-4\" v-if=\"errors.length\">\r\n                    <!-- v-if: display the errors when true-->\r\n                    <ul class=\"mb-0\">\r\n                        <li v-for=\"(error, index) in errors\" :key=\"index\">\r\n                            <!-- v-for directive is similar to for loop-->\r\n                            {{ error }}\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <!--form-->\r\n                <form @submit.prevent=\"saveCustomer\" novalidate>\r\n                    <fieldset>\r\n                        <div class=\"form-group\">\r\n                            <label class=\"form-label mt-4\">\r\n                                First Name:\r\n                            </label>\r\n                            <input type=\"text\" class=\"form-control\" placeholder=\"First Name\" v-model=\"customer.firstName\" />\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <label class=\"form-label mt-4\">\r\n                                Last Name:\r\n                            </label>\r\n                            <input type=\"text\" class=\"form-control\" placeholder=\"Last Name\" v-model=\"customer.lastName\" />\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <label class=\"form-label mt-4\">\r\n                                Photo URL:\r\n                            </label>\r\n                            <input type=\"text\" class=\"form-control\" placeholder=\"Photo URL\" v-model=\"customer.photoURL\" />\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <label class=\"form-label mt-4\">\r\n                                Address:\r\n                            </label>\r\n                            <input type=\"text\" class=\"form-control\" placeholder=\"Address\" v-model=\"customer.address\" />\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <label class=\"form-label mt-4\">\r\n                                Mobile Number:\r\n                            </label>\r\n                            <input type=\"text\" class=\"form-control\" placeholder=\"Mobile Number\" v-model=\"customer.mobile\" />\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <label class=\"form-label mt-4\">\r\n                                Email Address:\r\n                            </label>\r\n                            <input type=\"email\" class=\"form-control\" placeholder=\"Email Address\" v-model=\"customer.email\" />\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <label class=\"form-label mt-4\">\r\n                                Date of Birth:\r\n                            </label>\r\n                            <input type=\"date\" class=\"form-control\" v-model=\"customer.dateOfBirth\" />\r\n                        </div>\r\n                        <router-link to=\"/\" class=\"btn btn-primary btn-sm mt-4\"><i class=\"bi bi-check-circle\"></i> Submit</router-link>\r\n                    </fieldset>\r\n                </form>\r\n            </div>\r\n            <!--image-->\r\n            <div class=\"col-md-4\">\r\n                <img :src=\"customer.photoURL\" alt=\"\" class=\"customer-img\" />\r\n                <!--dymamic display of photo-->\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n    export default {\r\n        name: 'AddCustomer',\r\n        data() {\r\n            return {\r\n                customer: {},\r\n                firstName: '',\r\n                lastName: '',\r\n                photoURL: '',\r\n                address: '',\r\n                mobile: '',\r\n                email: '',\r\n                dateOfBirth: '',\r\n                errors: []\r\n            }\r\n        },\r\n        methods: {\r\n            async cancellAddCustomer() {\r\n                alert('Add customer cancelled');\r\n            },\r\n            async saveCustomer() {\r\n                this.errors = [];\r\n                if (!this.customer.firstName) {\r\n                    //display error message when returned as empty field\r\n                    this.errors.push('First name is required')\r\n                }\r\n                if (!this.customer.lastName) {\r\n                    this.errors.push('Last name is required')\r\n                }\r\n                if (!this.customer.photoURL) {\r\n                    this.errors.push('Photo URL is required')\r\n                }if (!this.customer.address) {\r\n                    this.errors.push('Address is required')\r\n                }\r\n                if (!this.customer.mobile) {\r\n                    this.errors.push('Mobile number is required')\r\n                }\r\n                if (!this.customer.email) {\r\n                    this.errors.push('Email Address is required')\r\n                }\r\n                if (!this.customer.dateOfBirth) {\r\n                    this.errors.push('Date of birth is required')\r\n                }\r\n                //no errors\r\n                if (!this.errors.length) {\r\n                    let formData = new FormData();\r\n                    formData.append('firstName', this.customer.firstName);\r\n                    formData.append('lastName', this.customer.lastName);\r\n                    formData.append('photoURL', this.customer.photoURL);\r\n                    formData.append('address', this.customer.address);\r\n                    formData.append('mobile', this.customer.mobile);\r\n                    formData.append('email', this.customer.email);\r\n                    formData.append('dateOfBirth', this.customer.dateOfBirth);\r\n                    let url = 'http://127.0.0.1:8000/api/save_customer';\r\n                    //access url via axios\r\n                    await axios.post(url,formData).then((response) => {\r\n                        console.log(response);\r\n                        if (response.status == 200) {\r\n                            alert(response.data.message);\r\n                            //refresh the values\r\n                            this.customer.firstName = '';\r\n                            this.customer.lastName = '';\r\n                            this.customer.photoURL = '';\r\n                            this.customer.address = '';\r\n                            this.customer.mobile = '';\r\n                            this.customer.email = '';\r\n                            this.customer.dateOfBirth = '';\r\n                        } else {\r\n                            //display errors\r\n                            console.log('error');\r\n                        }\r\n                    }).catch(error => {\r\n                        this.errors.push(error.response);\r\n                    });\r\n                }\r\n            }            \r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}